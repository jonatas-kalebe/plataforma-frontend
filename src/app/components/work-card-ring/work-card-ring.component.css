/**
 * Import responsive design tokens for 3D card ring
 * Tokens include: --ring-viewport, --card-w, --card-h, --ring-perspective, --ring-font-size
 * Breakpoints: 600px, 640px, 768px, 1024px (mobile-first)
 */
@import '../../../styles/ring-tokens.css';

:host {
  display: block;
  overflow: hidden; /* Prevent any scrollbars on the host element */
}

/* Screen reader only - hides content visually but keeps it accessible to screen readers */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/**
 * Ring wrapper - provides 3D perspective for the card ring
 * Uses --ring-perspective token from ring-tokens.css
 * Fallback: 1200px for browsers that don't support CSS custom properties
 */
.ring-wrap {
  perspective: var(--ring-perspective, 1200px);
  display: grid;
  place-items: center;
  width: 100%;
  height: clamp(280px, 80vmin, 420px);
  position: relative;
  overflow: hidden; /* Changed from visible to hidden to prevent scrollbars */
  touch-action: pan-y;
}

/**
 * Ring container - 3D transform container for cards
 * Uses responsive tokens: --ring-viewport (width/height)
 */
.ring {
  position: relative;
  transform-style: preserve-3d;
  width: var(--ring-viewport);
  height: var(--ring-viewport);
  cursor: grab;
  transform-origin: 50% 50% 0;
  will-change: transform;
  -webkit-user-select: none;
  user-select: none;
}

.ring:active { cursor: grabbing; }

/* Visible focus indicator for keyboard navigation */
.ring:focus-visible {
  outline: 2px solid #64ffda;
  outline-offset: 4px;
  border-radius: 0.5rem;
}

/**
 * Individual work card positioning
 * Uses tokens: --card-w, --card-h for responsive sizing
 * Cards are centered using negative margins based on token values
 */
.work-card {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  margin-top: calc(-0.5 * var(--card-h));
  margin-left: calc(-0.5 * var(--card-w));
  backface-visibility: visible;
  will-change: transform;
}

/**
 * Work card inner content styling
 * Uses responsive tokens: --card-w, --card-h, --ring-font-size
 * Maintains 5:3 aspect ratio via --card-h calculation
 */
.work-card-inner {
  width: var(--card-w);
  height: var(--card-h);
  display: grid;
  place-items: center;
  background: #112240;
  border: 2px solid #64ffda;
  color: #ccd6f6;
  border-radius: 1rem;
  font-size: var(--ring-font-size);
  font-weight: 700;
  overflow: hidden;
  box-shadow:
    0 0 10px rgba(100, 255, 218, 0.3),
    inset 0 0 10px rgba(100, 255, 218, 0.1);
  transform: rotateY(var(--inner-flip, 0deg));
  transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
  backface-visibility: hidden;
}

@media (prefers-reduced-motion: no-preference) {
  .work-card-inner::before {
    content: '';
    position: absolute;
    inset: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(100, 255, 218, 0.12), transparent);
    transform: rotate(45deg);
    animation: lightTrail 4s linear infinite;
    opacity: 0;
    pointer-events: none;
  }
  @keyframes lightTrail {
    0% { transform: translateX(-100%) rotate(45deg); opacity: 0; }
    50% { opacity: 0.3; }
    100% { transform: translateX(100%) rotate(45deg); opacity: 0; }
  }
}

.work-card-inner:hover {
  border-color: #64ffda;
  box-shadow: 0 0 20px rgba(100, 255, 218, 0.5), inset 0 0 15px rgba(100, 255, 218, 0.2);
  transform: rotateY(var(--inner-flip, 0deg)) scale(1.02);
}

/**
 * WCAG 2.1 Level AA: Respect user motion preferences
 * Disables animations for users with vestibular disorders or motion sensitivity
 */
@media (prefers-reduced-motion: reduce) {
  .work-card-inner { transition: none; }
}

/**
 * RESPONSIVE ADJUSTMENTS
 * Note: Base tokens (--ring-viewport, --card-w, --card-h, --ring-font-size) 
 * are defined in ring-tokens.css with mobile-first breakpoints:
 * - Base: < 600px
 * - 600px: Small tablets
 * - 640px: Landscape mobile
 * - 768px: Tablets (md)
 * - 1024px: Desktop (lg)
 * 
 * These component-specific rules only adjust layout height
 */

/**
 * Tablet breakpoint (768px) - Adjust ring wrapper height
 * Tokens --card-w, --ring-viewport already scaled by ring-tokens.css
 */
@media (min-width: 768px) {
  .ring-wrap { 
    height: clamp(320px, 70vmin, 420px); 
  }
}

/**
 * Extra small screens (â‰¤480px) - Adjust ring wrapper height
 * Prevents scrollbars on very small mobile devices
 */
@media (max-width: 480px) {
  .ring-wrap {
    height: clamp(240px, 75vmin, 360px);
    overflow: hidden;
  }
}
