name: CI SSR + E2E + Visual Audit

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/ci-ssr-e2e.yml'
      - 'playwright.config.*'
      - 'e2e/**'
  push:
    branches: [ main ]
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/ci-ssr-e2e.yml'
      - 'playwright.config.*'
      - 'e2e/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ci-ssr-e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ssr:
    name: Build SSR (Angular + Server Bundle)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (CI)
        run: npm ci

      - name: Validate scripts existence
        run: |
          node -e "
            const p=require('./package.json').scripts;
            const required=['build:ssr:frontend','serve:ssr:frontend'];
            const missing=required.filter(s=>!p[s]);
            if(missing.length){
              console.error('Faltam scripts no package.json:', missing.join(', '));
              process.exit(1);
            }"
      - name: Build SSR (browser + server)
        run: |
          set -eux
          npm run build:ssr:frontend || {
            echo 'Falha no build SSR'; exit 1;
          }
          if [ ! -f dist/frontend/server/server.mjs ]; then
            echo "Bundle de servidor não encontrado em dist/frontend/server/server.mjs"
            ls -R dist/frontend || true
            exit 1
          fi
      - name: Archive dist (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: dist-frontend-ssr
          path: |
            dist/frontend/**
          if-no-files-found: error
          retention-days: 3

  e2e:
    name: Playwright E2E + Visual Regression
    needs: build-ssr
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL: http://localhost:4000
      # Cenário alternativo para prefers-reduced-motion pode ser ativado via flag nos testes
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (CI)
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-frontend-ssr
          path: dist/frontend

      - name: List dist (debug)
        run: ls -R dist/frontend/server || true

      - name: Start SSR server (background)
        run: |
          set -eux
            nohup npm run serve:ssr:frontend > server.log 2>&1 &
            echo $! > ssr.pid
        shell: bash

      - name: Health check SSR :4000
        run: |
          set -eux
          for i in $(seq 1 60); do
            if curl -sSf $BASE_URL >/dev/null; then
              echo "SSR UP"
              exit 0
            fi
            sleep 2
            tail -n 10 server.log || true
          done
          echo "SSR não respondeu"
          exit 1

      - name: Show initial server log (partial)
        run: tail -n 200 server.log || true

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests (generate baseline if first run)
        run: |
          set -eux
          npx playwright test || {
            echo "Falha nos testes. Se for ausência de baseline, gere snapshots localmente ou ajuste lógica de baseline.";
            exit 1;
          }

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 5

      - name: Upload Screenshots & Snapshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: |
            **/screenshots/**
            **/test-results/**
          if-no-files-found: warn
          retention-days: 5

      - name: Upload Server Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ssr-server-log
          path: server.log
          if-no-files-found: warn
          retention-days: 5

  visual_audit:
    name: Gemini Visual + A11y Audit
    needs: e2e
    runs-on: ubuntu-latest
    if: >
      needs.e2e.result == 'success' &&
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) &&
      secrets.GEMINI_API_KEY != ''
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (minimal for serving already built dist if needed)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist-frontend-ssr
          path: dist/frontend

      - name: Start SSR for audit
        run: |
          nohup npm run serve:ssr:frontend > server.log 2>&1 &
          for i in $(seq 1 40); do
            curl -sSf http://localhost:4000 >/dev/null && break
            sleep 2
          done
          curl -sSf http://localhost:4000 >/dev/null || { echo 'SSR não subiu para auditoria'; exit 1; }

      - name: Run Gemini CLI Audit
        id: gemini
        uses: google-github-actions/run-gemini-cli@v0
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            Site SSR Angular 19 servido em http://localhost:4000.
            Avalie: acessibilidade, contraste, hierarquia tipográfica, responsividade, jank em transições de scroll, impacto de motion-reduced.
            Estruture em Markdown com: Sumário, Achados Críticos, Melhorias Rápidas, Sugestões.

      - name: Comentar no PR com relatório Gemini
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `### Auditoria Gemini\n\n${{ steps.gemini.outputs.summary || 'Sem saída.' }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

  audit_skip_notice:
    name: Aviso (Gemini não executou)
    needs: e2e
    if: >
      needs.e2e.result == 'success' &&
      (secrets.GEMINI_API_KEY == '' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true))
    runs-on: ubuntu-latest
    steps:
      - name: Aviso
        run: |
          echo "Gemini não executado: Secret ausente ou PR de fork sem permissões."
